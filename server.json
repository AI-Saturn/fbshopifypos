require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const crypto = require('crypto');
const axios = require('axios');

const app = express();
app.use(bodyParser.json());

// Ortam değişkenlerinden gizli bilgileri al
const FACEBOOK_ACCESS_TOKEN = process.env.FACEBOOK_ACCESS_TOKEN;
const FACEBOOK_DATASET_ID = process.env.FACEBOOK_DATASET_ID;

const FACEBOOK_API_URL = `https://graph.facebook.com/v18.0/${FACEBOOK_DATASET_ID}/events?access_token=${FACEBOOK_ACCESS_TOKEN}`;

function sha256(input) {
  return crypto.createHash('sha256').update(input).digest('hex');
}

function toEpochSeconds(dateString) {
  return Math.floor(new Date(dateString).getTime() / 1000);
}

app.post('/webhook/orders-create', async (req, res) => {
  const order = req.body;

  try {
    if (!order.location_id) {
      return res.status(200).send('Not a POS order');
    }

    const event_time = toEpochSeconds(order.created_at);
    const value = parseFloat(order.total_price);
    const currency = order.currency;
    const transaction_id = String(order.order_number || order.id);

    const email = order.email?.trim().toLowerCase();
    const phone = order.phone?.replace(/[^0-9]/g, '');

    const user_data = {};
    if (email) user_data.em = sha256(email);
    if (phone) user_data.ph = sha256(phone);

    if (Object.keys(user_data).length === 0) {
      return res.status(200).send('Missing customer data');
    }

    const payload = {
      data: [
        {
          event_name: 'Purchase',
          event_time,
          event_id: transaction_id,
          action_source: 'physical_store',
          user_data,
          custom_data: {
            value,
            currency,
            transaction_id
          }
        }
      ]
    };

    const response = await axios.post(FACEBOOK_API_URL, payload);
    console.log('✅ Facebook response:', response.data);
    res.status(200).send('OK');
  } catch (error) {
    console.error('❌ Facebook error:', error.response?.data || error.message);
    res.status(500).send('Error');
  }
});

app.get('/', (req, res) => {
  res.send('Shopify Facebook Webhook çalışıyor!');
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`🚀 Webhook sunucusu ${PORT} portunda çalışıyor.`);
});
